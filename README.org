* Comments on the app

This app deals with simple concepts (connecting to an API and SPA frontend), but requires a lot of gluing in the backend, so it's good for training design and good architecture.

On the technical side, the backend part was quite easy. After setting up google's API key, the coding part was effortless since I was doing TDD. I also didn't jump ahead of myself and wrote untested code, which was good since the refactorings came much more naturally as I added more features.

Moreover, this was the first time I've ever used React (although I knew about it) and, even though it was difficult to get the dev environment ready, after the tools started fitting together, it was a very nice workflow. I thought that React was really comfortable to work with. Of course, the framework is huge and I know little, but it was satisfying to think in a different way than usual.

For dockerizing the app I needed to use docker-compose because I needed Nginx, which I haven't done before since I've only deployed to Heroku.

To sum up, the planning/designing was essential and made all the components fit nicely together.

* Dependencies

Python dependencies are defined in =requirements.txt=. The =Pipfile= was generated by =pypenv=, which is a tool like =npm=, and creates a virtualenv automatically.

Javascript dependencies are in =package.json=. It's not necessary to build the javascript code in =georaffe/static/js= since I sent it compiled already.

* Replacing API key

It's possible to either put the key directly into =GOOGLE_GEOCODE_API_KEY= in =prospectiva/settings.py=, set an environment variable, or save it in =.env=.

For passing the env variables to the docker container, rename =.env_template= to =.env= and put the key there.

* Running the tests

Just run =pytest georaffe/test_views.py=. You might want to hide irrelevant messages with =--disable-warnings=.

* Running the app

After replacing the API key, run =docker-compose --build= if you want to build the image, or simply run =python manage.py runserver 0.0.0.0:8000=.
